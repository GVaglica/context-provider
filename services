#!/bin/bash
#
#  Command Line Interface to start all services associated with the Getting-Started Tutorial
#
#  For this tutorial the commands are merely a convenience script to run docker-compose
#

set -e

loadData () {
	printf "Loading context data "
	./import-data
	echo -e " \033[1;32mdone\033[0m"
	echo ""
}

if (( $# != 1 )); then
    echo "Illegal number of parameters"
    echo "usage: services [create|start|stop]"
    exit 1
fi

command="$1"
case "${command}" in
	"help")
        echo "usage: services [create|start|stop]"
        ;;
    "start")
		echo -e "Starting three containers  \033[1;34mOrion\033[0m, \033[1;30mTutorial\033[0m and a \033[1;30mMongoDB\033[0m database."
		echo -e "- \033[1;34mOrion\033[0m is the context broker"
		echo -e "- \033[1;30mTutorial\033[0m is used as a content provider proxying other web services"
		echo ""
		docker-compose --log-level ERROR -p fiware up -d --remove-orphans
		loadData
		echo -e "Now open \033[4mhttp://localhost:3000/app/monitor\033[0m"
		;;
	"stop")
		echo "stopping containers"
		docker-compose --log-level ERROR -p fiware down -v --remove-orphans
		;;
	"create")
		echo "Obtaining Mongo DB image"
		docker pull mongo:3.6
		echo "Obtaining Latest Orion Image"
		docker pull fiware/orion
		echo "Obtaining Tutorial Application"
		docker pull fiware/tutorials.context-provider
		;;
	*)
		echo "Command not Found."
		echo "usage: services [create|start|stop]"
		exit 127;
		;;
esac



